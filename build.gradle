group 'com.github.afpdev'
version '0.2.3.inventage'

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'maven'

sourceCompatibility = 1.7
println 'Source Compatibility:' + sourceCompatibility

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task writeNewPom << {
    pom {
        project {

            name 'Alpheus AFP Parser'
            description '''\
Alpheus AFP Parser is a library and parser for the IBM Advanced Function Presentation (AFP) document/print stream format. \

Alpheus covers all AFP specifications: MO:DCA, BCOCA, CMOCA, FOCA, GOCA, IOCA, and PTOCA. It is a complete implementation. Every Structured Field, Repeating Group, and Triplet is fully implemented as Java class. Alpheus AFP Parser was written from scratch and has no external dependencies.

Copyright 2015,2016 Rudolf Fiala

Alpheus AFP Parser is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
            '''

            url 'https://github.com/afpdev/alpheusafpparser'

            scm {
                url 'https://github.com/afpdev/alpheusafpparser'
                connection 'scm:git:git://github.com/afpdev/alpheusafpparser.git'
            }

            inceptionYear '2015'
            licenses {
                license {
                    name 'GNU General Public License, Version 3'
                    url 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'afpdev'
                    name 'Rudolf Fiala'
                    email 'afpdev@mogozine.com'
                    url 'https://github.com/afpdev'
                    roles {
                        role 'architect'
                        role 'developer'
                    }
                    timezone 'Europe/Vienna'
                }
            }

        }
    }.writeTo("${buildDir}/libs/${rootProject.name}-${version}.pom")
}

clean.doFirst {
    delete "${rootDir}/output/"
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

configurations {
    checkstyleConfig
}

dependencies {
    checkstyleConfig ("com.puppycrawl.tools:checkstyle:7.1") {
        transitive = false
    }
}

checkstyle {
    toolVersion = '7.1'
    config = resources.text.fromArchiveEntry(configurations.checkstyleConfig, 'google_checks.xml')
}
